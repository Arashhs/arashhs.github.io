[{"authors":null,"categories":null,"content":" Hi! My name is Arash. I am currently working as a PhD Research Assistant at InfoLab, Computer Science Department at the University of Southern California under the supervision of Prof. Cyrus Shahabi. My research interests include Graph Neural Networks and Spatio-Temporal Data Management and Forecasting.\nPlease check out my CV if you want to find more information about me and my research!\n","date":1607817600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1607817600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Hi! My name is Arash. I am currently working as a PhD Research Assistant at InfoLab, Computer Science Department at the University of Southern California under the supervision of Prof.","tags":null,"title":"Arash Hajisafi","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://arashhs.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Arash Hajisafi","Haowen Lin","Yao-Yi Chiang","Cyrus Shahabi"],"categories":[],"content":"","date":1706400000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1706497530,"objectID":"b79bbde9599f833ccf90e84d4958d505","permalink":"https://arashhs.github.io/publication/neurognn-pakdd/","publishdate":"2024-01-28T03:05:30.147875Z","relpermalink":"/publication/neurognn-pakdd/","section":"publication","summary":"Diagnosing epilepsy requires accurate seizure detection and classification, but traditional manual EEG signal analysis is resourceintensive. Meanwhile, automated algorithms often overlook EEG’s geometric and semantic properties critical for interpreting brain activity. This paper introduces NeuroGNN, a dynamic Graph Neural Network (GNN) framework that captures the dynamic interplay between the EEG electrode locations and the semantics of their corresponding brain regions. The specific brain region where an electrode is placed critically shapes the nature of captured EEG signals. Each brain region governs distinct cognitive functions, emotions, and sensory processing, influencing both the semantic and spatial relationships within the EEG data. Understanding and modeling these intricate brain relationships are essential for accurate and meaningful insights into brain activity. This is precisely where the proposed NeuroGNN framework excels by dynamically constructing a graph that encapsulates these evolving spatial, temporal, semantic, and taxonomic correlations to improve precision in seizure detection and classification. Our extensive experiments with real-world data demonstrate that NeuroGNN significantly outperforms existing state-ofthe-art models.","tags":["Computer Science - Machine Learning"],"title":"Dynamic GNNs for Precise Seizure Detection and Classification from EEG Data","type":"publication"},{"authors":["Arash Hajisafi","Maria Despoina Siampou","Jize Bi","Luciano Nocera","Cyrus Shahabi"],"categories":[],"content":"","date":1704153600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1704251130,"objectID":"1eac398e015a80751f278319725d1bf2","permalink":"https://arashhs.github.io/publication/w4h-icde/","publishdate":"2023-12-18T03:05:30.147875Z","relpermalink":"/publication/w4h-icde/","section":"publication","summary":"The Wearables for Health Toolkit (W4H Toolkit) is an open-source platform that provides a robust, end-to-end solution for the centralized management and analysis of wearable data. With integrated tools and frameworks, the toolkit facilitates seamless data acquisition, integration, storage, analysis, and visualization of both stored and streaming data from various wearable devices. The W4H Toolkit is designed to provide medical researchers and health practitioners with a unified framework that enables the analysis of health-related data for various clinical applications. We provide an overview of the system and demonstrate how it can be used by health researchers to import and analyze a wide range of wearable data and perform data analysis, highlighting the versatility and functionality of the system across diverse healthcare domains and applications.","tags":["Computer Science - Machine Learning"],"title":"Wearables for Health (W4H) Toolkit for Acquisition, Storage, Analysis and Visualization of Data from Various Wearable Devices","type":"publication"},{"authors":["Sina Shaham","Arash Hajisafi","Minh K. Quan","Dinh C. Nguyen","Bhaskar Krishnamachari","Charith Peris","Gabriel Ghinita","Cyrus Shahabi","Pubudu N. Pathirana"],"categories":[],"content":"","date":1688169600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1691636730,"objectID":"bb81a9946f4dab15428fc407bf64af77","permalink":"https://arashhs.github.io/publication/fairness-privacy-survey/","publishdate":"2023-08-10T03:05:30.147875Z","relpermalink":"/publication/fairness-privacy-survey/","section":"publication","summary":"Privacy and fairness are two crucial pillars of responsible Artificial Intelligence (AI) and trustworthy Machine Learning (ML). Each objective has been independently studied in the literature with the aim of reducing utility loss in achieving them. Despite the significant interest attracted from both academia and industry, there remains an immediate demand for more in-depth research to unravel how these two objectives can be simultaneously integrated into ML models. As opposed to well-accepted trade-offs, i.e., privacy-utility and fairness-utility, the interrelation between privacy and fairness is not well-understood. While some works suggest a trade-off between the two objective functions, there are others that demonstrate the alignment of these functions in certain scenarios. To fill this research gap, we provide a thorough review of privacy and fairness in ML, including supervised, unsupervised, semi-supervised, and reinforcement learning. After examining and consolidating the literature on both objectives, we present a holistic survey on the impact of privacy on fairness, the impact of fairness on privacy, existing architectures, their interaction in application domains, and algorithms that aim to achieve both objectives while minimizing the utility sacrificed. Finally, we identify research challenges in achieving privacy and fairness concurrently in ML, particularly focusing on large language models.","tags":["Computer Science - Machine Learning"],"title":"Holistic Survey of Privacy and Fairness in Machine Learning","type":"publication"},{"authors":["Arash Hajisafi","Haowen Lin","Sina Shaham","Haoji Hu","Maria Despoina Siampou","Yao-Yi Chiang","Cyrus Shahabi"],"categories":[],"content":"","date":1685577600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1691636730,"objectID":"f511c3f8bd2bfb324e51f7aef2d81e86","permalink":"https://arashhs.github.io/publication/bysgnn/","publishdate":"2023-08-10T03:05:29.560304Z","relpermalink":"/publication/bysgnn/","section":"publication","summary":" The study presents the Busyness Graph Neural Network (BysGNN), designed to forecast visits to urban Points-of-Interest (POIs). BysGNN uncovers multi-context correlations among POIs across temporal, spatial, and semantic dimensions, resulting in a comprehensive dynamic graph. This approach significantly improves forecasting accuracy over traditional methods, offering a deeper understanding of urban dynamics.","tags":["Computer Science - Machine Learning","Computer Science - Social and Information Networks"],"title":"Learning Dynamic Graphs from All Contextual Information for Accurate Point-of-Interest Visit Forecasting","type":"publication"},{"authors":["Hong Nguyen","Arash Hajisafi","Alireza Abdoli","Seon Ho Kim","Cyrus Shahabi"],"categories":[],"content":"","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1691636729,"objectID":"a7e201139fdc18ec962f68651e136f82","permalink":"https://arashhs.github.io/publication/ts-anomaly-detection/","publishdate":"2023-08-10T03:05:28.938208Z","relpermalink":"/publication/ts-anomaly-detection/","section":"publication","summary":"One critical issue in any network systems is failure detection. Failures not only impact the source network but also propagate through other communicating networks due to the butterfly effect, making root causing of failures even more challenging. Therefore, the necessity to detect failures and anomalies in computer networks is fundamental. Given the nature of computer networks, data is received in a time-series format where each time-point has temporal dependencies on others. As a result, time-series analysis stands out as a potential approach to deal with the task of network anomaly detection. In this paper, we conduct studies on multivariate time series anomaly detection, varying from traditional machine learning techniques to deep learning models. We show that the choice of models is not as important as the choice of pre-processing techniques. Interestingly, non-linear normalization can boost the performance of deep detectors by around 20% in terms of F1 score and balance the preference of deep detectors for specific types of anomalies. We also study the bias of anomaly types to deep detectors, time-performance trade-offs, shortage of data, and effects of weakly labeled data on both synthetic and realworld datasets to fill out the missing insights in the literature.","tags":["Anomaly Detection","Computational modeling","Computer networks","Computer Networks","Data models","Deep learning","Deep Learning","Detectors","Labeling","Time series analysis","Time-series Data Analysis","Unsupervised Learning"],"title":"An Evaluation of Time-Series Anomaly Detection in Computer Networks","type":"publication"},{"authors":[],"categories":[],"content":"","date":1608949189,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1608949189,"objectID":"d96a339bb6797139ef958bef6d2e349a","permalink":"https://arashhs.github.io/project/computational-intelligence-ga-and-es/","publishdate":"2020-12-26T05:49:49+03:30","relpermalink":"/project/computational-intelligence-ga-and-es/","section":"project","summary":"Solving NP-Complete problems using Genetic Algorithms and Evolution Strategy","tags":["1"],"title":"Computational Intelligence Programming","type":"project"},{"authors":[],"categories":[],"content":"","date":1608940699,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1608940699,"objectID":"e8ba8e0daa6eb26c0c75cdfc94aee1fc","permalink":"https://arashhs.github.io/project/principles-of-artificial-intelligence-card-game-search/","publishdate":"2020-12-26T03:28:19+03:30","relpermalink":"/project/principles-of-artificial-intelligence-card-game-search/","section":"project","summary":"Solving a card game by implementing BFS, IDS, and A* search strategies in Python","tags":["1"],"title":"Principles of Artificial Intelligence - Card Game","type":"project"},{"authors":["Arash Hajisafi","吳恩達"],"categories":["Demo","教程"],"content":"Overview The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It’s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more The template is mobile first with a responsive design to ensure that your site looks stunning on every device. Get Started 👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Tutorial and Release Notes Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy’s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem Hugo Academic CLI: Automatically import publications from BibTeX Inspiration Check out the latest demo of what you’ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files. Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://arashhs.github.io/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","开源"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":[],"categories":[],"content":"A terminal-based Hangman game written in C for the final project of my Introduction to Programming course in the first semester at university. It has save/load options and many other cool stuff!\nHere’s some gameplay footage: ","date":1597801502,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597801502,"objectID":"fc887861b46691d1dbb23c0196d9b832","permalink":"https://arashhs.github.io/project/hangman/","publishdate":"2020-08-19T06:15:02+04:30","relpermalink":"/project/hangman/","section":"project","summary":"A terminal-based Hangman game written in C for the final project of my Introduction to Programming course in the first semester at university","tags":["3"],"title":"Hangman","type":"project"},{"authors":[],"categories":[],"content":"","date":1597800239,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597800239,"objectID":"5127289ea9091ea7f84b179cb5e9c4b7","permalink":"https://arashhs.github.io/project/simple-image-compressor/","publishdate":"2020-08-19T05:53:59+04:30","relpermalink":"/project/simple-image-compressor/","section":"project","summary":"Implementation of an image compression algorithm in python using NumPy library for my Applied Linear Algebra course","tags":["3"],"title":"Simple Image Compressor","type":"project"},{"authors":[],"categories":[],"content":"I’ve implemented everyone’s favorite Battleship Game in Java for my Advanced Programming course. The game supports both single-player and local multiplayer modes and is console-based.\nHere’s some gameplay footage: (Click to open in full size on a new tab) ","date":1597798578,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597798578,"objectID":"d49ab6a179bdab07d6e19f1477f540dd","permalink":"https://arashhs.github.io/project/battleship-game/","publishdate":"2020-08-19T05:26:18+04:30","relpermalink":"/project/battleship-game/","section":"project","summary":"Everyone's favorite Battleship Game implemented in Java","tags":["3"],"title":"Battleship Game","type":"project"},{"authors":[],"categories":[],"content":"","date":1597797044,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597797044,"objectID":"debd67f0d29bb1f7ef894700897e5ccc","permalink":"https://arashhs.github.io/project/elevator-circuit/","publishdate":"2020-08-19T05:00:44+04:30","relpermalink":"/project/elevator-circuit/","section":"project","summary":"An elevator circuit designed and implemented in Verilog for the final project of my Logic Circuits course","tags":["4"],"title":"Elevator Circuit","type":"project"},{"authors":[],"categories":[],"content":"Example Command:\n(eval-exp (with \u0026#34;f1\u0026#34; (lam \u0026#34;f1\u0026#34; \u0026#34;a\u0026#34; (with \u0026#34;x\u0026#34; (var \u0026#34;a\u0026#34;) (lam \u0026#34;f2\u0026#34; \u0026#34;z\u0026#34; (plus (var \u0026#34;x\u0026#34;) (num 1))))) (with \u0026#34;f3\u0026#34; (lam \u0026#34;f3\u0026#34; \u0026#34;f\u0026#34; (with \u0026#34;x\u0026#34; (num 1729) (apply (var \u0026#34;f\u0026#34;) (munit)))) (apply (var \u0026#34;f3\u0026#34;) (apply (var \u0026#34;f1\u0026#34;) (num 1)))))) Output:\n(num 2) ","date":1597796277,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597796277,"objectID":"9aea3c6710405ea3aee6b3ec5bd8f869","permalink":"https://arashhs.github.io/project/numex-interpreter/","publishdate":"2020-08-19T04:47:57+04:30","relpermalink":"/project/numex-interpreter/","section":"project","summary":"A pure functional implementation of NUMEX (Number Expression Programming Language) written in Racket","tags":["3"],"title":"NUMEX Interpreter","type":"project"},{"authors":[],"categories":[],"content":"","date":1597795007,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597795007,"objectID":"8440a2a4e81514fce3111633c7e05ee4","permalink":"https://arashhs.github.io/project/matrix-equation-solver-hardware-implementation/","publishdate":"2020-08-19T04:26:47+04:30","relpermalink":"/project/matrix-equation-solver-hardware-implementation/","section":"project","summary":"Implementation of a matrix equation solver algorithm in VHDL for the final project of my Design Automation (FPGA) course","tags":["3"],"title":"Matrix Equation Solver Hardware Implementation","type":"project"},{"authors":[],"categories":[],"content":"","date":1597794415,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597794415,"objectID":"be7e57d88b04f212ed9b3f3f08a77546","permalink":"https://arashhs.github.io/project/voice-gender-detection/","publishdate":"2020-08-19T04:16:55+04:30","relpermalink":"/project/voice-gender-detection/","section":"project","summary":"Gender detection project based on audio files written in MATLAB for the final project of my Signals and Systems course","tags":["2"],"title":"Voice Gender Detection","type":"project"},{"authors":[],"categories":[],"content":"","date":1597793032,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597793032,"objectID":"2ab7ed5ebd3fe4175f4c1c4734aba488","permalink":"https://arashhs.github.io/project/google-search-query-parser/","publishdate":"2020-08-19T03:53:52+04:30","relpermalink":"/project/google-search-query-parser/","section":"project","summary":"A simple google search query parser and report generator web application using Java, Spring Framework, and Maven","tags":["2"],"title":"Google Search Query Parser","type":"project"},{"authors":[],"categories":[],"content":" Lexical Analysis, Syntax Analysis, Semantic Analysis, and Intermediate Code Generation implemented using JFlex and Bison for my Compiler Design course project for the grammar which is included in the repository Generated code representation is in three address code format How to compile Make sure that you have set up Bison and Flex properly, then run the following code in terminal:\nbison -L JAVA SHLang.yac -v del SHLang.java ren SHLang.cac SHLang.java javac Yylex.java SHLang.java java YYParser gcc compiler.c Alternatively, you can run the run.bat file.\nExample Input:\nProgram p1Main; Real n1, n2, n3, n4, n5; Begin n1 := #20 - #10 / #2; n2 := n1 / (#3 + #2); n3 := n1 * n2 - #10;\tIf(n1 .GT. #2) Then Begin For n4:=n2 Downto #0 Do Begin n3 := n3 + #1; n2 := n2 - #1 End End Else If(n2 .NE. #3) Then n2 := #80 End; Output:\n#include \u0026lt;stdio.h\u0026gt; int main() { // ////////////////// Symbol Table \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ \\\\ double n1; double n2; double n3; double n4; double n5; int __SHLangTempVar0; int __SHLangTempVar1; int __SHLangTempVar2; int __SHLangTempVar3; int __SHLangTempVar4; double __SHLangTempVar5; int __SHLangTempVar6; int __SHLangTempVar7; int __SHLangTempVar8; double __SHLangTempVar9; double __SHLangTempVar10; double __SHLangTempVar11; int __SHLangTempVar12; double __SHLangTempVar13; double __SHLangTempVar14; int __SHLangTempVar15; int __SHLangTempVar16; int __SHLangTempVar17; int __SHLangTempVar18; double __SHLangTempVar19; double __SHLangTempVar20; int __SHLangTempVar21; double __SHLangTempVar22; double __SHLangTempVar23; int __SHLangConditionVarn4; int __SHLangTempVar24; int __SHLangTempVar25; int __SHLangTempVar26; double __SHLangTempVar27; // ////////////////// Quadruples \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ \\\\ Line0:\t__SHLangTempVar0 = 20; Line1:\tif (__SHLangTempVar0) goto Line3; Line2:\tgoto Line3; Line3:\t__SHLangTempVar1 = 10; Line4:\tif (__SHLangTempVar1) goto Line6; Line5:\tgoto Line6; Line6:\t__SHLangTempVar2 = 2; Line7:\tif (__SHLangTempVar2) goto Line9; Line8:\tgoto Line9; Line9:\t__SHLangTempVar3 = __SHLangTempVar1 / __SHLangTempVar2; Line10:\tif (__SHLangTempVar3) goto Line12; Line11:\tgoto Line12; Line12:\t__SHLangTempVar4 = __SHLangTempVar0 - __SHLangTempVar3; Line13:\tif (__SHLangTempVar4) goto Line15; Line14:\tgoto Line15; Line15:\t__SHLangTempVar5 = (double) __SHLangTempVar4; Line16:\tn1 = __SHLangTempVar5; Line17:\tprintf(\u0026#34;%s = %f\\n\u0026#34;, \u0026#34;n1\u0026#34;, n1); Line18:\tgoto Line19; Line19:\tif (n1) goto Line21; Line20:\tgoto Line21; Line21:\t__SHLangTempVar6 = 3; Line22:\tif (__SHLangTempVar6) goto Line24; Line23:\tgoto Line24; Line24:\t__SHLangTempVar7 = 2; Line25:\tif (__SHLangTempVar7) goto Line27; Line26:\tgoto Line27; Line27:\t__SHLangTempVar8 = __SHLangTempVar6 + __SHLangTempVar7; Line28:\tif (__SHLangTempVar8) goto Line30; Line29:\tgoto Line30; Line30:\t__SHLangTempVar10 = (double) __SHLangTempVar8; Line31:\t__SHLangTempVar9 = n1 / __SHLangTempVar10; Line32:\tif (__SHLangTempVar9) goto Line34; Line33:\tgoto Line34; Line34:\tn2 = __SHLangTempVar9; Line35:\tprintf(\u0026#34;%s = %f\\n\u0026#34;, \u0026#34;n2\u0026#34;, n2); Line36:\tgoto Line37; Line37:\tif (n1) goto Line39; Line38:\tgoto Line39; Line39:\tif (n2) goto Line41; Line40:\tgoto Line41; Line41:\t__SHLangTempVar11 = n1 * n2; Line42:\tif (__SHLangTempVar11) goto Line44; Line43:\tgoto Line44; Line44:\t__SHLangTempVar12 = 10; Line45:\tif (__SHLangTempVar12) goto Line47; Line46:\tgoto Line47; Line47:\t__SHLangTempVar14 = (double) __SHLangTempVar12; Line48:\t__SHLangTempVar13 = __SHLangTempVar11 - __SHLangTempVar14; Line49:\tif (__SHLangTempVar13) goto Line51; Line50:\tgoto Line51; Line51:\tn3 = __SHLangTempVar13; Line52:\tprintf(\u0026#34;%s = %f\\n\u0026#34;, \u0026#34;n3\u0026#34;, n3); Line53:\tgoto Line54; Line54:\tif (n1) goto Line56; Line55:\tgoto Line56; Line56:\t__SHLangTempVar15 = 2; Line57:\tif (__SHLangTempVar15) goto Line59; Line58:\tgoto Line59; Line59:\t__SHLangTempVar16 = n1 \u0026gt; __SHLangTempVar15; Line60:\tif (__SHLangTempVar16) goto Line62; Line61:\tgoto Line100; Line62:\tif (n2) goto Line64; Line63:\tgoto Line64; Line64:\t__SHLangTempVar17 = 0; Line65:\tif (__SHLangTempVar17) goto Line67; Line66:\tgoto Line67; Line67:\tgoto Line92; Line68:\tif (n3) goto Line70; Line69:\tgoto Line70; Line70:\t__SHLangTempVar18 = 1; Line71:\tif (__SHLangTempVar18) goto Line73; Line72:\tgoto Line73; Line73:\t__SHLangTempVar20 = (double) __SHLangTempVar18; Line74:\t__SHLangTempVar19 = n3 + __SHLangTempVar20; Line75:\tif (__SHLangTempVar19) goto Line77; Line76:\tgoto Line77; Line77:\tn3 = __SHLangTempVar19; Line78:\tprintf(\u0026#34;%s = %f\\n\u0026#34;, \u0026#34;n3\u0026#34;, n3); Line79:\tgoto Line80; Line80:\tif (n2) goto Line82; Line81:\tgoto Line82; Line82:\t__SHLangTempVar21 = 1; Line83:\tif (__SHLangTempVar21) goto Line85; Line84:\tgoto Line85; Line85:\t__SHLangTempVar23 = (double) __SHLangTempVar21; Line86:\t__SHLangTempVar22 = n2 - __SHLangTempVar23; Line87:\tif (__SHLangTempVar22) goto Line89; Line88:\tgoto Line89; Line89:\tn2 = __SHLangTempVar22; Line90:\tprintf(\u0026#34;%s = %f\\n\u0026#34;, \u0026#34;n2\u0026#34;, n2); Line91:\tgoto Line97; Line92:\tn4 = n2; Line93:\t__SHLangConditionVarn4 = __SHLangTempVar17 - n4; Line94:\t__SHLangConditionVarn4 = n4 \u0026gt;= __SHLangTempVar17; Line95:\tif …","date":1597787997,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597787997,"objectID":"9f34fa0dfea1a019998635fceef1bc39","permalink":"https://arashhs.github.io/project/compiler-project/","publishdate":"2020-08-19T02:29:57+04:30","relpermalink":"/project/compiler-project/","section":"project","summary":"Principles of Compiler Design course project implemented using Bison and JFlex","tags":["3"],"title":"Compiler Project","type":"project"},{"authors":[],"categories":[],"content":"Design and Analysis of a Secure Smart-Card-Based Healthcare System The research consists of 2 main parts, the investigation of smart card architectures and modeling security threats in an Electronic Healthcare System. A functional system architecture has been proposed to address these security threats which specifies a smart-card-based authentication method. The research was conducted in the Spring and Summer of 2020 for my Research Method and Technical Presentation course (which includes both Written and Oral Presentations).\n","date":1597720003,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597720003,"objectID":"0de6641fe72c482b347a1041d769e262","permalink":"https://arashhs.github.io/project/research-secure-smart-card-based-healthcare-system/","publishdate":"2020-08-18T07:36:43+04:30","relpermalink":"/project/research-secure-smart-card-based-healthcare-system/","section":"project","summary":"My Research Method and Technical Presentation Course every step taken from deciding on a subject to the final writing and presentation","tags":["2"],"title":"Research Secure Smart Card Based Healthcare System","type":"project"},{"authors":[],"categories":[],"content":"I have implemented the EDF and FCFS scheduling algorithms in FreeRTOS for Arduino boards as part of my Real-Time and Embedded Systems course assignments.\n","date":1597719335,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597719335,"objectID":"054ea46551b08f4847b7a1e655fb56c2","permalink":"https://arashhs.github.io/project/modified-arduino-freertos-scheduling/","publishdate":"2020-08-18T07:25:35+04:30","relpermalink":"/project/modified-arduino-freertos-scheduling/","section":"project","summary":"Arduino FreeRTOS EDF and FCFS Scheduling Algorithms Implementation","tags":["2"],"title":"Modified Arduino FreeRTOS Scheduling","type":"project"},{"authors":[],"categories":[],"content":" Implemented a modified version of Xv6’s original scheduling algorithm and a modified priority-based scheduling algorithm to take both the waiting time and importance of a task into account Added system calls to choose the scheduling algorithm in a process, to count the number of called system calls in a process, and several more features Added the ability to measure creation time, termination time, sleeping time, ready time, and running time of processes to evaluate the performance of the new scheduling algorithms ","date":1597718464,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597718464,"objectID":"62804f6cd823628863944ae4fc4a53a2","permalink":"https://arashhs.github.io/project/modified-xv6-with-new-features/","publishdate":"2020-08-18T07:11:04+04:30","relpermalink":"/project/modified-xv6-with-new-features/","section":"project","summary":"Adding system calls and implementing different scheduling policies in Xv6","tags":["2"],"title":"Modified Xv6 With New Features","type":"project"},{"authors":[],"categories":[],"content":"I have implemented threads and ticket lock in Xv6 for the final project of my Operating Systems course\nModified Xv6 process allocation, execution, and termination implementations to add support for threads so that each process can have multiple threads Modified scheduling algorithm to schedule threads Added Ticket Lock to the kernel ","date":1597717697,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597717697,"objectID":"52808e516499ceb78da916d7f7b6c81d","permalink":"https://arashhs.github.io/project/threads-and-ticket-lock-implementation-in-xv6/","publishdate":"2020-08-18T06:58:17+04:30","relpermalink":"/project/threads-and-ticket-lock-implementation-in-xv6/","section":"project","summary":"Implementing threads as well as ticket lock in Xv6's kernel","tags":["1"],"title":"Threads and Ticket Lock Implementation in Xv6","type":"project"},{"authors":[],"categories":[],"content":"NetWolf is a P2P torrent-like network application written in Python for the final project of my Computer Networks Course with the following capabilities:\nDiscovering clusters and maintaining a cluster list at each node by periodically sending a UDP customized DISCOVERY message Sharing files between nodes by sending a UDP customized GET message (which includes the file names), waiting for the answer, and selecting the best node (fastest response), and then establishing a TCP connection for transmitting the file Application in action: (Click to open in full size on a new tab) ","date":1597715864,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597715864,"objectID":"be7b01c3e7f37b9db01c2980e7041e84","permalink":"https://arashhs.github.io/project/netwolf/","publishdate":"2020-08-18T06:27:44+04:30","relpermalink":"/project/netwolf/","section":"project","summary":"A Peer-to-Peer file sharing application implemented in Python","tags":["1"],"title":"NetWolf","type":"project"},{"authors":[],"categories":[],"content":" A database system for restaurant management using Python, Tkinter library, and MySQL for the final project of my Database Design course Applied ER and normalization techniques to design the database and adopted Python to build a GUI app to connect with the database and add/delete/edit records and tables, and execute queries on the database Application in action: (Click to open in full size on a new tab) ","date":1597706821,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597706821,"objectID":"baeb45cd8c38f717eabffa1faaa5e92e","permalink":"https://arashhs.github.io/project/restaurant-management-database/","publishdate":"2020-08-18T03:57:01+04:30","relpermalink":"/project/restaurant-management-database/","section":"project","summary":"Restaurant Management Database With GUI Using Python and MySQL","tags":["1"],"title":"Restaurant Management Database","type":"project"},{"authors":[],"categories":[],"content":"That’s MyTable V2 is a Java Spring MVC and Hibernate project used for the implementation of my Software Engineering (I) project for table booking and food reservations in a restaurant.\nForked from That’s MyTable!, a Github repository on which we applied different software evolution and maintenance techniques to adapt the project with newer versions of Java and Spring framework and added many new functionalities such as food reservations and a better implementation for table booking and time management as well as fixing numerous bugs Re-wrote the entire database from the ground up to adapt it with new functionalities ","date":1597705964,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597705964,"objectID":"b67bb227e17e0e048daa36c3163f97e7","permalink":"https://arashhs.github.io/project/thats-mytable-v2/","publishdate":"2020-08-18T03:42:44+04:30","relpermalink":"/project/thats-mytable-v2/","section":"project","summary":"Restaurant Table Booking and Food Reservation Web Application Developed Using Java, Spring MVC, Hibernate, and Maven","tags":["Java","Spring MVC","Hibernate","Maven","4"],"title":"That's MyTable V2","type":"project"},{"authors":[],"categories":[],"content":"JTanks is a 2D tank game made in Java for the final project of my Advanced Programming course written at the end of my freshman year at university.\nBoth multiplayer and single-player modes are implemented as well as a text-based map editor A balanced loot-based system is implemented with various power-up items - varying from weapon-upgrades to reducing damage taken by the player Featuring three different difficulty settings (Easy, Normal, and Hard) which impacts the maps, enemies, and the amount of damage taken by the player in the game The project is based on Buffer-Strategy implementation and uses multi-threading techniques Here’s some gameplay footage: ","date":1597628001,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597628001,"objectID":"5d3363c61f2913dd2b08f506dc3ad469","permalink":"https://arashhs.github.io/project/jtanks-game/","publishdate":"2020-08-17T06:03:21+04:30","relpermalink":"/project/jtanks-game/","section":"project","summary":"A 2D tank game written in Java","tags":["Java","Network","Buffer-Strategy","Multi-Threading","1"],"title":"JTanks Game","type":"project"},{"authors":[],"categories":[],"content":" JDM is a GUI Download Manager written in Java. It supports multiple downloads at the same time (with the ability to limit the maximum number of concurrent downloads), blocking downloads from specific domains, and queueing It is the Midterm Project of my Advanced Programming course Application in action: (Click to open in full size on a new tab) ","date":1597617741,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597617741,"objectID":"7fa80c34b8aff1d2ef992e29b8b4d0c8","permalink":"https://arashhs.github.io/project/jdm/","publishdate":"2020-08-17T03:12:21+04:30","relpermalink":"/project/jdm/","section":"project","summary":"A GUI Java Download Manager with queueing support","tags":["2"],"title":"JDM","type":"project"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://arashhs.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"}]