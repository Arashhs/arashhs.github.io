[{"authors":["admin"],"categories":null,"content":"Arash is a final-year undergraduate student pursuing a B.Sc degree in Computer Engineering at the Amirkabir University of Technology (Tehran Polytechnic).\nHis main areas of interest include Software Engineering and Machine Learning. He also has strong mathematical and statistical skills and the ability to apply those skills to real-world problems.\nYou can check out his CV and Transcript.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://arashhs.github.io/author/arash-hajisafi/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/arash-hajisafi/","section":"authors","summary":"Arash is a final-year undergraduate student pursuing a B.Sc degree in Computer Engineering at the Amirkabir University of Technology (Tehran Polytechnic).\nHis main areas of interest include Software Engineering and Machine Learning.","tags":null,"title":"Arash Hajisafi","type":"authors"},{"authors":[],"categories":[],"content":"I have implemented the EDF and FCFS scheduling algorithms in FreeRTOS for Arduino boards as part of my Real-Time and Embedded Systems course assignments.\n","date":1597719335,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597719335,"objectID":"054ea46551b08f4847b7a1e655fb56c2","permalink":"https://arashhs.github.io/project/modified-arduino-freertos-scheduling/","publishdate":"2020-08-18T07:25:35+04:30","relpermalink":"/project/modified-arduino-freertos-scheduling/","section":"project","summary":"Arduino FreeRTOS EDF and FCFS Scheduling Algorithms Implementation","tags":["2"],"title":"Modified Arduino FreeRTOS Scheduling","type":"project"},{"authors":[],"categories":[],"content":" Implemented a modified version of Xv6\u0026rsquo;s original scheduling algorithm and a modified priority-based scheduling algorithm to take both the waiting time and importance of a task into account Added system calls to choose the scheduling algorithm in a process, to count the number of called system calls in a process, and several more features Added the ability to measure creation time, termination time, sleeping time, ready time, and running time of processes to evaluate the performance of the new scheduling algorithms  ","date":1597718464,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597718464,"objectID":"62804f6cd823628863944ae4fc4a53a2","permalink":"https://arashhs.github.io/project/modified-xv6-with-new-features/","publishdate":"2020-08-18T07:11:04+04:30","relpermalink":"/project/modified-xv6-with-new-features/","section":"project","summary":"Adding system calls and implementing different scheduling policies to Xv6","tags":["1"],"title":"Modified Xv6 With New Features","type":"project"},{"authors":[],"categories":[],"content":"I have implemented threads and ticket lock in Xv6 for the final project of my Operating Systems course\n Modified XV6 process allocation, execution, and termination implementations to add support for threads so that each process can have multiple threads Modified scheduling algorithm to schedule threads Added Ticket Lock to the kernel  ","date":1597717697,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597717697,"objectID":"52808e516499ceb78da916d7f7b6c81d","permalink":"https://arashhs.github.io/project/threads-and-ticket-lock-implementation-in-xv6/","publishdate":"2020-08-18T06:58:17+04:30","relpermalink":"/project/threads-and-ticket-lock-implementation-in-xv6/","section":"project","summary":"Implementing threads as well as ticket lock in Xv6's kernel","tags":["1"],"title":"Threads and Ticket Lock Implementation in Xv6","type":"project"},{"authors":[],"categories":[],"content":"NetWolf is a P2P torrent-like network application written in Python for the final project of my Computer Networks Course with the following capabilities:\n Discovering clusters and maintaining a cluster list at each node by periodically sending a UDP customized DISCOVERY message Sharing files between nodes by sending a UDP customized GET message (which includes the files name), waiting for the answer, and selecting the best node (fastest response) and then establishing a TCP connection for transmitting the file  Application in action: (Click to open in full size on a new tab) \n","date":1597715864,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597715864,"objectID":"be7b01c3e7f37b9db01c2980e7041e84","permalink":"https://arashhs.github.io/project/netwolf/","publishdate":"2020-08-18T06:27:44+04:30","relpermalink":"/project/netwolf/","section":"project","summary":"A Peer-to-Peer file sharing application implemented in Python","tags":["1"],"title":"NetWolf","type":"project"},{"authors":[],"categories":[],"content":"Design and Analysis of a Secure Smart-Card-Based Healthcare System The research consists of 2 main parts, the investigation of smart card architectures and modeling security threats in an Electronic Healthcare System. A functional system architecture has been proposed to address these security threats which specifies a smart-card-based authentication method. The research was conducted in the Spring and Summer of 2020 for my Research Method and Technical Presentation course (which includes both Written and Oral Presentations).\n","date":1597715143,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597715143,"objectID":"0de6641fe72c482b347a1041d769e262","permalink":"https://arashhs.github.io/project/research-secure-smart-card-based-healthcare-system/","publishdate":"2020-08-18T06:15:43+04:30","relpermalink":"/project/research-secure-smart-card-based-healthcare-system/","section":"project","summary":"My Research Method and Technical Presentation Course every step taken from deciding on a subject to the final writing and presentation","tags":["2"],"title":"Research Secure Smart Card Based Healthcare System","type":"project"},{"authors":[],"categories":[],"content":" A database system for restaurant management using Python Tkinter and MySQL for the final project of my Database Design course Applied ER and normalization techniques to design the database and adopted Python to build a GUI app to connect with the database and add/delete/edit records and tables, and execute queries on the database  Application in action: (Click to open in full size on a new tab) \n","date":1597706821,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597706821,"objectID":"baeb45cd8c38f717eabffa1faaa5e92e","permalink":"https://arashhs.github.io/project/restaurant-management-database/","publishdate":"2020-08-18T03:57:01+04:30","relpermalink":"/project/restaurant-management-database/","section":"project","summary":"Restaurant Management Database With GUI Using Python and MySQL","tags":["1"],"title":"Restaurant Management Database","type":"project"},{"authors":[],"categories":[],"content":"That\u0026rsquo;s MyTable V2 is a Java Spring MVC and Hibernate project used for the implementation of my Software Engineering (I) project for table booking and food reservations in a restaurant.\n Forked from That\u0026rsquo;s MyTable!, a Github repository which we applied different software evolution and maintenance techniques on to adapt the project with newer versions of Java and Spring framework and added many new functionalities such as food reservations and a better implementation for table booking and time management as well as fixing numerous bugs. Re-wrote the entire database from the ground up to adapt it with new functionalities  ","date":1597705964,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597705964,"objectID":"b67bb227e17e0e048daa36c3163f97e7","permalink":"https://arashhs.github.io/project/thats-mytable-v2/","publishdate":"2020-08-18T03:42:44+04:30","relpermalink":"/project/thats-mytable-v2/","section":"project","summary":"Restaurant Table Booking and Food Reservation Web Application Developed Using Java, Spring MVC, Hibernate, and Maven","tags":["Java","Spring MVC","Hibernate","Maven","1"],"title":"That's MyTable V2","type":"project"},{"authors":[],"categories":[],"content":"JTanks is a 2D tank game made in Java for the final project of my Advanced Programming course written at the end of my freshman year at university.\n Both multiplayer and single-player modes are implemented as well as a text-based map editor A balanced loot-based system is implemented with various power-up items - varying from weapon-upgrades to reducing damage taken by the player Featuring three different difficulty settings (Easy, Normal, and Hard) which impacts the maps, enemies, and the amount of damage taken by the player in the game The project is based on Buffer-Strategy implementation and uses multi-threading techniques   Here\u0026rsquo;s some gameplay footage: ","date":1597628001,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597628001,"objectID":"5d3363c61f2913dd2b08f506dc3ad469","permalink":"https://arashhs.github.io/project/jtanks-game/","publishdate":"2020-08-17T06:03:21+04:30","relpermalink":"/project/jtanks-game/","section":"project","summary":"A 2D tank game written in Java","tags":["Java","Network","Buffer-Strategy","Multi-Threading","1"],"title":"JTanks Game","type":"project"}]