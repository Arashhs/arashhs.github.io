<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>1 | Arash Hajisafi</title>
    <link>https://arashhs.github.io/tag/1/</link>
      <atom:link href="https://arashhs.github.io/tag/1/index.xml" rel="self" type="application/rss+xml" />
    <description>1</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>[Arash Hajisafi](https://arashhs.github.io/) © 2020</copyright><lastBuildDate>Sat, 26 Dec 2020 05:49:49 +0330</lastBuildDate>
    <image>
      <url>https://arashhs.github.io/images/icon_hu66945b6f4b90faf7a26b441f02dee319_707_512x512_fill_lanczos_center_2.png</url>
      <title>1</title>
      <link>https://arashhs.github.io/tag/1/</link>
    </image>
    
    <item>
      <title>Computational Intelligence Programming</title>
      <link>https://arashhs.github.io/project/computational-intelligence-ga-and-es/</link>
      <pubDate>Sat, 26 Dec 2020 05:49:49 +0330</pubDate>
      <guid>https://arashhs.github.io/project/computational-intelligence-ga-and-es/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Principles of Artificial Intelligence - Card Game</title>
      <link>https://arashhs.github.io/project/principles-of-artificial-intelligence-card-game-search/</link>
      <pubDate>Sat, 26 Dec 2020 03:28:19 +0330</pubDate>
      <guid>https://arashhs.github.io/project/principles-of-artificial-intelligence-card-game-search/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Threads and Ticket Lock Implementation in Xv6</title>
      <link>https://arashhs.github.io/project/threads-and-ticket-lock-implementation-in-xv6/</link>
      <pubDate>Tue, 18 Aug 2020 06:58:17 +0430</pubDate>
      <guid>https://arashhs.github.io/project/threads-and-ticket-lock-implementation-in-xv6/</guid>
      <description>&lt;p&gt;I have implemented threads and ticket lock in Xv6 for the final project of my Operating Systems course&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Modified Xv6 process allocation, execution, and termination implementations to add support
for threads so that each process can have multiple threads&lt;/li&gt;
&lt;li&gt;Modified scheduling algorithm to schedule threads&lt;/li&gt;
&lt;li&gt;Added Ticket Lock to the kernel&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>NetWolf</title>
      <link>https://arashhs.github.io/project/netwolf/</link>
      <pubDate>Tue, 18 Aug 2020 06:27:44 +0430</pubDate>
      <guid>https://arashhs.github.io/project/netwolf/</guid>
      <description>&lt;p&gt;NetWolf is a P2P torrent-like network application written in Python for the final project of my Computer Networks Course with the following capabilities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Discovering clusters and maintaining a cluster list at each node by periodically sending a UDP customized DISCOVERY message&lt;/li&gt;
&lt;li&gt;Sharing files between nodes by sending a UDP customized GET message (which includes the file names), waiting for the answer, and selecting the best node (fastest response), and then establishing a TCP connection for transmitting the file&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Application in action: (Click to open in full size on a new tab)
&lt;a href=&#34;gif.gif&#34; target=&#34;_blank&#34;&gt;
&lt;img src=&#34;gif.gif&#34; alt=&#34;NetWolf © Arash Hajisafi&#34;&gt;
&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Restaurant Management Database</title>
      <link>https://arashhs.github.io/project/restaurant-management-database/</link>
      <pubDate>Tue, 18 Aug 2020 03:57:01 +0430</pubDate>
      <guid>https://arashhs.github.io/project/restaurant-management-database/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;A database system for restaurant management using Python, Tkinter library, and MySQL for the final
project of my Database Design course&lt;/li&gt;
&lt;li&gt;Applied ER and normalization techniques to design the database and adopted Python to build
a GUI app to connect with the database and add/delete/edit records and tables, and execute
queries on the database&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Application in action: (Click to open in full size on a new tab)
&lt;a href=&#34;featured.gif&#34; target=&#34;_blank&#34;&gt;
&lt;img src=&#34;featured.gif&#34; alt=&#34;Restaurant Management Database © Arash Hajisafi&#34;&gt;
&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JTanks Game</title>
      <link>https://arashhs.github.io/project/jtanks-game/</link>
      <pubDate>Mon, 17 Aug 2020 06:03:21 +0430</pubDate>
      <guid>https://arashhs.github.io/project/jtanks-game/</guid>
      <description>&lt;p&gt;JTanks is a 2D tank game made in Java for the final project of my Advanced Programming course written
at the end of my freshman year at university.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Both multiplayer and single-player modes are implemented as well as a text-based map editor&lt;/li&gt;
&lt;li&gt;A balanced loot-based system is implemented with various power-up items - varying from weapon-upgrades to reducing damage taken by the player&lt;/li&gt;
&lt;li&gt;Featuring three different difficulty settings (Easy, Normal, and Hard) which impacts the maps, enemies, and the amount of damage taken by the player in the game&lt;/li&gt;
&lt;li&gt;The project is based on Buffer-Strategy implementation and uses multi-threading techniques
&lt;br/&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here&amp;rsquo;s some gameplay footage:
&lt;img src=&#34;gameplay.gif&#34; alt=&#34;JTanks Gameplay © Arash Hajisafi&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
